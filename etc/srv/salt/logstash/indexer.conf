input {

  # Read events from the ZeroMQ socket
  zeromq {
    address => "tcp://*:5154"
    type => "all"
    topology => "pushpull"
  }

}

filter {

  grok {
    type => "syslog" # for logs of type "syslog"
    pattern => "%{SYSLOGLINE}"
    # You can specify multiple 'pattern' lines
  }

  grok {
    type => "apache-access" # for logs of type 'apache-access'
    pattern => "%{COMBINEDAPACHELOG}"
  }

  date {
    type => "syslog"

    # The 'timestamp' and 'timestamp8601' names are for fields in the
    # logstash event.  The 'SYSLOGLINE' grok pattern above includes a field
    # named 'timestamp' that is set to the normal syslog timestamp if it
    # exists in the event.
    timestamp => "MMM  d HH:mm:ss"   # syslog 'day' value can be space-leading
    timestamp => "MMM dd HH:mm:ss"
    timestamp8601 => ISO8601 # Some syslogs use ISO8601 time format
  }

  date {
    type => "apache-access"
    timestamp => "dd/MMM/yyyy:HH:mm:ss Z"
  }

  grok {
    type => "salt"
    patterns_dir => "/vagrant/etc/grok/patterns"
    pattern => "%{SALTLOGBASE}"
  }

  date {
    type => "salt"
    logdate => "yyyy-MM-dd HH:mm:ss,SSS"
  }
}

output {

  # If your elasticsearch server is discoverable with multicast, use this:
  #elasticsearch { }

  # If you can't discover using multicast, set the address explicitly
  elasticsearch {
    embedded => true
  }
}
